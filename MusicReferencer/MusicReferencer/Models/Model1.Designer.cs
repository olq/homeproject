//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("MusicReferencerModel", "FK_AlbumRate_Album", "Album", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MusicReferencer.Models.Album), "AlbumRate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MusicReferencer.Models.AlbumRate), true)]
[assembly: EdmRelationshipAttribute("MusicReferencerModel", "FK_Review_Profile", "Album", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MusicReferencer.Models.Album), "Review", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MusicReferencer.Models.Review), true)]
[assembly: EdmRelationshipAttribute("MusicReferencerModel", "FK_ReviewRate_Review", "Review", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(MusicReferencer.Models.Review), "ReviewRate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MusicReferencer.Models.ReviewRate), true)]

#endregion

namespace MusicReferencer.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MusicReferencerEntities2 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MusicReferencerEntities2 object using the connection string found in the 'MusicReferencerEntities2' section of the application configuration file.
        /// </summary>
        public MusicReferencerEntities2() : base("name=MusicReferencerEntities2", "MusicReferencerEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MusicReferencerEntities2 object.
        /// </summary>
        public MusicReferencerEntities2(string connectionString) : base(connectionString, "MusicReferencerEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MusicReferencerEntities2 object.
        /// </summary>
        public MusicReferencerEntities2(EntityConnection connection) : base(connection, "MusicReferencerEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Album> Album
        {
            get
            {
                if ((_Album == null))
                {
                    _Album = base.CreateObjectSet<Album>("Album");
                }
                return _Album;
            }
        }
        private ObjectSet<Album> _Album;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AlbumRate> AlbumRate
        {
            get
            {
                if ((_AlbumRate == null))
                {
                    _AlbumRate = base.CreateObjectSet<AlbumRate>("AlbumRate");
                }
                return _AlbumRate;
            }
        }
        private ObjectSet<AlbumRate> _AlbumRate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Profile> Profile
        {
            get
            {
                if ((_Profile == null))
                {
                    _Profile = base.CreateObjectSet<Profile>("Profile");
                }
                return _Profile;
            }
        }
        private ObjectSet<Profile> _Profile;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Review> Review
        {
            get
            {
                if ((_Review == null))
                {
                    _Review = base.CreateObjectSet<Review>("Review");
                }
                return _Review;
            }
        }
        private ObjectSet<Review> _Review;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReviewRate> ReviewRate
        {
            get
            {
                if ((_ReviewRate == null))
                {
                    _ReviewRate = base.CreateObjectSet<ReviewRate>("ReviewRate");
                }
                return _ReviewRate;
            }
        }
        private ObjectSet<ReviewRate> _ReviewRate;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Album EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlbum(Album album)
        {
            base.AddObject("Album", album);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AlbumRate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAlbumRate(AlbumRate albumRate)
        {
            base.AddObject("AlbumRate", albumRate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Profile EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProfile(Profile profile)
        {
            base.AddObject("Profile", profile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Review EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReview(Review review)
        {
            base.AddObject("Review", review);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReviewRate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReviewRate(ReviewRate reviewRate)
        {
            base.AddObject("ReviewRate", reviewRate);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MusicReferencerModel", Name="Album")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Album : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Album object.
        /// </summary>
        /// <param name="albumName">Initial value of the AlbumName property.</param>
        /// <param name="albumId">Initial value of the AlbumId property.</param>
        public static Album CreateAlbum(global::System.String albumName, global::System.Int32 albumId)
        {
            Album album = new Album();
            album.AlbumName = albumName;
            album.AlbumId = albumId;
            return album;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AlbumName
        {
            get
            {
                return _AlbumName;
            }
            set
            {
                OnAlbumNameChanging(value);
                ReportPropertyChanging("AlbumName");
                _AlbumName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AlbumName");
                OnAlbumNameChanged();
            }
        }
        private global::System.String _AlbumName;
        partial void OnAlbumNameChanging(global::System.String value);
        partial void OnAlbumNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlbumId
        {
            get
            {
                return _AlbumId;
            }
            set
            {
                if (_AlbumId != value)
                {
                    OnAlbumIdChanging(value);
                    ReportPropertyChanging("AlbumId");
                    _AlbumId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AlbumId");
                    OnAlbumIdChanged();
                }
            }
        }
        private global::System.Int32 _AlbumId;
        partial void OnAlbumIdChanging(global::System.Int32 value);
        partial void OnAlbumIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MusicReferencerModel", "FK_AlbumRate_Album", "AlbumRate")]
        public EntityCollection<AlbumRate> AlbumRate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AlbumRate>("MusicReferencerModel.FK_AlbumRate_Album", "AlbumRate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AlbumRate>("MusicReferencerModel.FK_AlbumRate_Album", "AlbumRate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MusicReferencerModel", "FK_Review_Profile", "Review")]
        public EntityCollection<Review> Review
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Review>("MusicReferencerModel.FK_Review_Profile", "Review");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Review>("MusicReferencerModel.FK_Review_Profile", "Review", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MusicReferencerModel", Name="AlbumRate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AlbumRate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AlbumRate object.
        /// </summary>
        /// <param name="rate">Initial value of the Rate property.</param>
        /// <param name="albumId">Initial value of the AlbumId property.</param>
        public static AlbumRate CreateAlbumRate(global::System.Decimal rate, global::System.Int32 albumId)
        {
            AlbumRate albumRate = new AlbumRate();
            albumRate.Rate = rate;
            albumRate.AlbumId = albumId;
            return albumRate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                if (_Rate != value)
                {
                    OnRateChanging(value);
                    ReportPropertyChanging("Rate");
                    _Rate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Rate");
                    OnRateChanged();
                }
            }
        }
        private global::System.Decimal _Rate;
        partial void OnRateChanging(global::System.Decimal value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlbumId
        {
            get
            {
                return _AlbumId;
            }
            set
            {
                if (_AlbumId != value)
                {
                    OnAlbumIdChanging(value);
                    ReportPropertyChanging("AlbumId");
                    _AlbumId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AlbumId");
                    OnAlbumIdChanged();
                }
            }
        }
        private global::System.Int32 _AlbumId;
        partial void OnAlbumIdChanging(global::System.Int32 value);
        partial void OnAlbumIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MusicReferencerModel", "FK_AlbumRate_Album", "Album")]
        public Album Album
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("MusicReferencerModel.FK_AlbumRate_Album", "Album").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("MusicReferencerModel.FK_AlbumRate_Album", "Album").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Album> AlbumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("MusicReferencerModel.FK_AlbumRate_Album", "Album");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Album>("MusicReferencerModel.FK_AlbumRate_Album", "Album", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MusicReferencerModel", Name="Profile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Profile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Profile object.
        /// </summary>
        /// <param name="profileID">Initial value of the ProfileID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static Profile CreateProfile(global::System.Int32 profileID, global::System.String name, global::System.String password)
        {
            Profile profile = new Profile();
            profile.ProfileID = profileID;
            profile.Name = name;
            profile.Password = password;
            return profile;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileID
        {
            get
            {
                return _ProfileID;
            }
            set
            {
                if (_ProfileID != value)
                {
                    OnProfileIDChanging(value);
                    ReportPropertyChanging("ProfileID");
                    _ProfileID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProfileID");
                    OnProfileIDChanged();
                }
            }
        }
        private global::System.Int32 _ProfileID;
        partial void OnProfileIDChanging(global::System.Int32 value);
        partial void OnProfileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MusicReferencerModel", Name="Review")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Review : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Review object.
        /// </summary>
        /// <param name="reviewId">Initial value of the ReviewId property.</param>
        /// <param name="reviewName">Initial value of the ReviewName property.</param>
        /// <param name="albumId">Initial value of the AlbumId property.</param>
        /// <param name="profileId">Initial value of the ProfileId property.</param>
        public static Review CreateReview(global::System.Int32 reviewId, global::System.String reviewName, global::System.Int32 albumId, global::System.Int32 profileId)
        {
            Review review = new Review();
            review.ReviewId = reviewId;
            review.ReviewName = reviewName;
            review.AlbumId = albumId;
            review.ProfileId = profileId;
            return review;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReviewId
        {
            get
            {
                return _ReviewId;
            }
            set
            {
                if (_ReviewId != value)
                {
                    OnReviewIdChanging(value);
                    ReportPropertyChanging("ReviewId");
                    _ReviewId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReviewId");
                    OnReviewIdChanged();
                }
            }
        }
        private global::System.Int32 _ReviewId;
        partial void OnReviewIdChanging(global::System.Int32 value);
        partial void OnReviewIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ReviewName
        {
            get
            {
                return _ReviewName;
            }
            set
            {
                OnReviewNameChanging(value);
                ReportPropertyChanging("ReviewName");
                _ReviewName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ReviewName");
                OnReviewNameChanged();
            }
        }
        private global::System.String _ReviewName;
        partial void OnReviewNameChanging(global::System.String value);
        partial void OnReviewNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AlbumId
        {
            get
            {
                return _AlbumId;
            }
            set
            {
                OnAlbumIdChanging(value);
                ReportPropertyChanging("AlbumId");
                _AlbumId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AlbumId");
                OnAlbumIdChanged();
            }
        }
        private global::System.Int32 _AlbumId;
        partial void OnAlbumIdChanging(global::System.Int32 value);
        partial void OnAlbumIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProfileId
        {
            get
            {
                return _ProfileId;
            }
            set
            {
                OnProfileIdChanging(value);
                ReportPropertyChanging("ProfileId");
                _ProfileId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProfileId");
                OnProfileIdChanged();
            }
        }
        private global::System.Int32 _ProfileId;
        partial void OnProfileIdChanging(global::System.Int32 value);
        partial void OnProfileIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MusicReferencerModel", "FK_Review_Profile", "Album")]
        public Album Album
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("MusicReferencerModel.FK_Review_Profile", "Album").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("MusicReferencerModel.FK_Review_Profile", "Album").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Album> AlbumReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Album>("MusicReferencerModel.FK_Review_Profile", "Album");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Album>("MusicReferencerModel.FK_Review_Profile", "Album", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MusicReferencerModel", "FK_ReviewRate_Review", "ReviewRate")]
        public EntityCollection<ReviewRate> ReviewRate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ReviewRate>("MusicReferencerModel.FK_ReviewRate_Review", "ReviewRate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ReviewRate>("MusicReferencerModel.FK_ReviewRate_Review", "ReviewRate", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="MusicReferencerModel", Name="ReviewRate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReviewRate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReviewRate object.
        /// </summary>
        /// <param name="rate">Initial value of the Rate property.</param>
        /// <param name="reviewId">Initial value of the ReviewId property.</param>
        public static ReviewRate CreateReviewRate(global::System.Decimal rate, global::System.Int32 reviewId)
        {
            ReviewRate reviewRate = new ReviewRate();
            reviewRate.Rate = rate;
            reviewRate.ReviewId = reviewId;
            return reviewRate;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                if (_Rate != value)
                {
                    OnRateChanging(value);
                    ReportPropertyChanging("Rate");
                    _Rate = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Rate");
                    OnRateChanged();
                }
            }
        }
        private global::System.Decimal _Rate;
        partial void OnRateChanging(global::System.Decimal value);
        partial void OnRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReviewId
        {
            get
            {
                return _ReviewId;
            }
            set
            {
                if (_ReviewId != value)
                {
                    OnReviewIdChanging(value);
                    ReportPropertyChanging("ReviewId");
                    _ReviewId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReviewId");
                    OnReviewIdChanged();
                }
            }
        }
        private global::System.Int32 _ReviewId;
        partial void OnReviewIdChanging(global::System.Int32 value);
        partial void OnReviewIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("MusicReferencerModel", "FK_ReviewRate_Review", "Review")]
        public Review Review
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Review>("MusicReferencerModel.FK_ReviewRate_Review", "Review").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Review>("MusicReferencerModel.FK_ReviewRate_Review", "Review").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Review> ReviewReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Review>("MusicReferencerModel.FK_ReviewRate_Review", "Review");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Review>("MusicReferencerModel.FK_ReviewRate_Review", "Review", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
